name: Build and Release Electron App

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Clean and install dependencies
        shell: pwsh
        run: |
          if (Test-Path package-lock.json) {
            Write-Host "Found package-lock.json"
          } else {
            Write-Host "No lockfile found"
          }

          if (Test-Path node_modules) {
            Write-Host "Removing existing node_modules..."
            Remove-Item -Recurse -Force node_modules
          } else {
            Write-Host "node_modules folder not found, skipping..."
          }

          if (Test-Path package-lock.json) {
            Write-Host "Removing existing package-lock.json..."
            Remove-Item -Force package-lock.json
          }

          Write-Host "Installing fresh dependencies..."
          npm install

      - name: Build renderer
        run: npm run build

      - name: Build main process
        run: npm run build:main

      - name: Package & publish app
        run: npx electron-builder --windows --x64 --publish=onTag
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: electron-app
          path: release/
